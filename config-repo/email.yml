server.port: 8092
spring:
  cloud:
    compatibility-verifier:
      enabled: false
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:9999
url-orderInfo: http://localhost:8090/order/user

spring.mail.username: phamchaugiatu123@gmail.com
spring.mail.properties.mail.smtp.starttls.required: true
spring.mail.host: smtp.gmail.com
spring.mail.port: 587
spring.mail.password: doeu iubp eyrj zvqa
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.transport.protocol: smtp
spring.mail.properties.mail.smtp.starttls.enable: true

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.messageProcessor-in-0:
    destination: orders
    group: auditGroup
spring.cloud.function.definition: messageProcessor

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.messageProcessor-in-0.consumer:
  autoBindDlq: true
  republishToDlq: true

spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer:
  enableDlq: true
---
spring.config.activate.on-profile: docker
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://auth-server:80
server.port: 8090
spring:
  data:
    mongodb:
      host: mongodb
      uri: mongodb://${CONFIG_SERVER_USR}:${CONFIG_SERVER_PWD}@mongodb:27017/product-db?authSource=admin&authMechanism=SCRAM-SHA-256
spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka