

spring.cloud.stream:
  default.contentType: application/json
  bindings:
    products-out-0:
      destination: products
      producer:
        required-groups: auditGroup
    recommendations-out-0:
      destination: recommendations
      producer:
        required-groups: auditGroup
    reviews-out-0:
      destination: reviews
      producer:
        required-groups: auditGroup
    features-out-0:
      destination: features
      producer:
        required-groups: auditGroup


management.tracing.sampling.probability: 1.0
logging.pattern.level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

services.composite.uri: https://localhost:8443
---
spring.config.activate.on-profile: docker
server.port: 80
services.composite.uri: https://localhost:8443
zipkin:
  baseUrl: http://zipkin-server:9411 # Zipkin server URL (replace with your Zipkin server URL)
  sender:
    type: web
uri:
  service:
    product: http://product:80
    recommendation: http://recommendation:80
    review: http://review:80
    feature: http://feature:80
---
spring.config.activate.on-profile: streaming_partitioned

spring.cloud.stream.bindings.products-out-0.producer:
  partition-key-expression: headers['partitionKey']
  partition-count: 2

spring.cloud.stream.bindings.recommendations-out-0.producer:
  partition-key-expression: headers['partitionKey']
  partition-count: 2

spring.cloud.stream.bindings.reviews-out-0.producer:
  partition-key-expression: headers['partitionKey']
  partition-count: 2
spring.cloud.stream.bindings.features-out-0.producer:
  partition-key-expression: headers['partitionKey']
  partition-count: 2
---
spring.config.activate.on-profile: prod

logging:
  level:
    root: WARN
    se.magnus: WARN
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: WARN