spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:9999
spring.cloud.stream.defaultBinder: rabbit

spring:
  application:
    name: config-server
  cloud:
    config:
      server:
        native:
          search-locations: file:./config-repo
    compatibility-verifier:
      enabled: true
    stream:
      default-binder: rabbit
    function:
      definition:
    datasource:
      url: jdbc:mysql://172.20.0.6:3306/review
      username: chau
      password: 123
      driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    mongodb:
      uri: mongodb://chau:123@localhost:27017/product-db?authSource=admin&authMechanism=SCRAM-SHA-256
  profiles:
    active: native

spring.rabbitmq:
  host: localhost
  port: 5672
  username: guest
  password: guest

management:
  endpoint:
    health:
      show-details: "ALWAYS"
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    rabbit:
      enabled: true
    kafka:
      enabled: false
  tracing:
    sampling:
      probability: 1.0

logging.pattern.level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

---

spring.config.activate.on-profile: docker
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://14.225.206.109:9999

management.zipkin.tracing.endpoint: http://zipkin-server:9411/api/v2/spans
zipkin:
  baseUrl: http://zipkin-server:9411
  sender:
    type: web

spring.rabbitmq:
  host: rabbitmq
  port: 5672
  username: guest
  password: guest

app:
  auth-server: 14.225.206.109

---

spring.config.activate.on-profile: kafka

spring.cloud.stream.defaultBinder: kafka
spring.kafka.bootstrap-servers: kafka:9092
spring.cloud.stream.kafka.binder.replication-factor: 1

management.health.rabbit.enabled: false
management.health.kafka.enabled: true

---

spring.config.activate.on-profile: prod

spring.rabbitmq.host: 172.17.0.1
server.shutdown: graceful
spring.lifecycle.timeout-per-shutdown-phase: 10s
