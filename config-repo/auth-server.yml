server.port: 9999
logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
spring.application.name: auth-server
app.auth.host: localhost
spring.main.allow-bean-definition-overriding: true
spring:
  cloud:
    compatibility-verifier:
      enabled: false
  datasource:
    url: jdbc:mysql://localhost:3306/review
    username: chau
    password: 123
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update  # or `create-drop` for fresh schema creation during development
    show-sql: true       # Show SQL queries in the console (optional)
    database-platform: org.hibernate.dialect.MySQL8Dialect

resilience4j.circuitbreaker:
  instances:
    product:
      allowHealthIndicatorToFail: false
      registerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      ignoreExceptions:
        - se.chau.microservices.api.exception.InvalidInputException
        - se.chau.microservices.api.exception.NotFoundException
management.tracing.sampling.probability: 1.0
zipkin:
  baseUrl: http://172.18.0.10:9411
  sender:
    type: web

spring.redis:
  host: 172.18.0.2    # Redis server address (can be changed to an IP address or remote server)
  port: 6379
  username: default # Redis server port (default is 6379)
  password: 123 # Redis password (optional, if you have one configured)
  timeout: 2000         # Connection timeout in milliseconds
  jedis:
    pool:
      max-active: 10    # Max number of active connections
      max-idle: 5       # Max number of idle connections
      min-idle: 1       # Min number of idle connections
      max-wait: -1      # Max wait time for getting a connection from the pool (-1 means no limit)
email:
  url: http://localhost:8092
spring.mail.username: phamchaugiatu123@gmail.com
spring.mail.properties.mail.smtp.starttls.required: true
spring.mail.host: smtp.gmail.com
spring.mail.port: 587
spring.mail.password: doeu iubp eyrj zvqa
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.transport.protocol: smtp
spring.mail.properties.mail.smtp.starttls.enable: true
auth_url: http://localhost:9999
---
spring.config.activate.on-profile: docker
auth_url: http://14.225.206.109:9999
spring.redis:
  host: redis
server.port: 9999
app.auth.host: 14.225.206.109
spring.security.oauth2.authorization-server.issuer: http://14.225.206.109:9999
zipkin:
  baseUrl: http://127.0.0.1:9411
  sender:
    type: web
spring:
  datasource:
    url: jdbc:mysql://mysql:3306/review
    username: chau
    password: 123
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update  # or `create-drop` for fresh schema creation during development
    show-sql: true       # Show SQL queries in the console (optional)
    database-platform: org.hibernate.dialect.MySQLDialect
spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka
---
spring.config.activate.on-profile: docker1
auth_url: http://auth-server:9999
spring.redis:
  host: redis
server.port: 9999
app.auth.host: auth-server
spring.security.oauth2.authorization-server.issuer: http://auth-server:9999
zipkin:
  baseUrl: http://127.0.0.1:9411
  sender:
    type: web
spring:
  datasource:
    url: jdbc:mysql://mysql:3306/review
    username: chau
    password: 123
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update  # or `create-drop` for fresh schema creation during development
    show-sql: true       # Show SQL queries in the console (optional)
    database-platform: org.hibernate.dialect.MySQLDialect
spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka
---
spring.config.activate.on-profile: prod
auth_url: https://14.225.206.109:8443
spring.redis:
  host: redis
server.port: 9999
app.auth.host: 14.225.206.109
zipkin:
  baseUrl: http://127.0.0.1:9411
  sender:
    type: web
spring:
  datasource:
    url: jdbc:mysql://mysql:3306/review
    username: chau
    password: 123
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update  # or `create-drop` for fresh schema creation during development
    show-sql: true       # Show SQL queries in the console (optional)
    database-platform: org.hibernate.dialect.MySQL8Dialect
spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka