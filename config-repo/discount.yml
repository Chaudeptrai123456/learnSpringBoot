server.port: 8093
spring.application.name: discount
spring.cloud.compatibility-verifier.enabled: false
spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.messageProcessor-in-0:
    destination: products
    group: productsGroup
  bindings.messageProcessor1-in-0:
    destination: orders
    group: ordersGroup
spring:
  cloud:
    stream:
      default-binder: rabbit
  data:
    mongodb:
      uri: mongodb://chau:123@localhost:27017/product-db?authSource=admin&authMechanism=SCRAM-SHA-256
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:9999
---
spring.config.activate.on-profile: docker
server.port: 8095
management:
  endpoint:
    health:
      validate-group-membership: false
app.auth-server: auth-server
spring:
  data:
    mongodb:
      host: mongodb
      uri: mongodb://chau:123@mongodb:27017/product-db?authSource=admin&authMechanism=SCRAM-SHA-256
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://14.225.206.109:9999
---
spring.config.activate.on-profile: docker1
server.port: 80
management:
  endpoint:
    health:
      validate-group-membership: false
app.auth-server: auth-server
spring:
  data:
    mongodb:
      host: mongodb
      uri: mongodb://chau:123@mongodb:27017/product-db?authSource=admin&authMechanism=SCRAM-SHA-256
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://auth-server:9999
---

spring.config.activate.on-profile: streaming_partitioned

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  partitioned: true
  instanceCount: 2

---
spring.config.activate.on-profile: streaming_instance_0

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0

---
spring.config.activate.on-profile: streaming_instance_1

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1
---
spring.config.activate.on-profile: prod

spring.data.mongodb.host: 172.20.0.8

logging:
  level:
    root: WARN
    se.magnus: WARN
    org.springframework.data.mongodb.core.MongoTemplate: WARN