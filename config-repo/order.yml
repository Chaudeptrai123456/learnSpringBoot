server.port: 8090
server.error.include-message: always
spring:
  data:
    mongodb:
      uri: mongodb://chau:123@localhost:27017/order-db?authSource=admin&authMechanism=SCRAM-SHA-256
spring.cloud.function.definition: messageProcessor
product.url: localhost:8081/product/
resilience4j.circuitbreaker:
  instances:
    product:
      allowHealthIndicatorToFail: false
      registerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      ignoreExceptions:
        - se.chau.microservices.api.exception.InvalidInputException
        - se.chau.microservices.api.exception.NotFoundException

management.tracing.sampling.probability: 1.0

spring.cloud.stream:
  default.contentType: application/json
  bindings:
    orders-out-0:
      destination: orders
      producer:
        required-groups: auditGroup
    products-out-0:
      destination: products
      producer:
        required-groups: auditGroup

logging:
  level:
    root: INFO
    se.magnus: DEBUG
    org.springframework.data.mongodb.core.ReactiveMongoTemplate: DEBUG

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"
spring.application.name: order
spring.cloud.compatibility-verifier.enabled: false
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:9999

url-product-sumcost: http://localhost:8081/product/sumcost

url-userInfo: http://localhost:9999/user/getInfo

---
spring.config.activate.on-profile: docker
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://14.225.206.109:9999
server.port: 8090
spring:
  data:
    mongodb:
      host: mongodb
      uri: mongodb://${CONFIG_SERVER_USR}:${CONFIG_SERVER_PWD}@mongodb:27017/product-db?authSource=admin&authMechanism=SCRAM-SHA-256
spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka

spring.mail.username: phamchaugiatu123@gmail.com
spring.mail.properties.mail.smtp.starttls.required: true
spring.mail.host: smtp.gmail.com
spring.mail.port: 587
spring.mail.password: pdyw cdmz npfw qsmt
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.transport.protocol: smtp
spring.mail.properties.mail.smtp.starttls.enable: true
url-product-sumcost: http://product:80/product/sumcost

url-userInfo: http://auth-server:80/user/getInfo
---
spring.config.activate.on-profile: docker1
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://auth-server:9999
server.port: 8090
spring:
  data:
    mongodb:
      host: mongodb
      uri: mongodb://${CONFIG_SERVER_USR}:${CONFIG_SERVER_PWD}@mongodb:27017/product-db?authSource=admin&authMechanism=SCRAM-SHA-256
spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka

spring.mail.username: phamchaugiatu123@gmail.com
spring.mail.properties.mail.smtp.starttls.required: true
spring.mail.host: smtp.gmail.com
spring.mail.port: 587
spring.mail.password: pdyw cdmz npfw qsmt
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.transport.protocol: smtp
spring.mail.properties.mail.smtp.starttls.enable: true
url-product-sumcost: http://product:80/product/sumcost

url-userInfo: http://auth-server:80/user/getInfo
---
spring.config.activate.on-profile: streaming_partitioned

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  partitioned: true
  instanceCount: 2

---
spring.config.activate.on-profile: streaming_instance_0

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0

---
spring.config.activate.on-profile: streaming_instance_1

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1
---
spring.config.activate.on-profile: prod

spring.data.mongodb.host: 172.20.0.8

logging:
  level:
    root: WARN
    se.magnus: WARN
    org.springframework.data.mongodb.core.MongoTemplate: WARN