server.ssl:
  key-store-type: PKCS12
  key-store: classpath:keystore/edge.p12
  key-store-password: 013234656798ntaA@
  key-alias: localhost
server:
  error:
    whitelabel:
      enabled: false
  port: 8443
spring.application.name: gateway
app:
  config-server: localhost
  eureka-username: u
  eureka-password: p
  eureka-server: localhost
  auth-server: localhost
  auth:
    host: localhost
  client:
    serviceUrl:
      defaultZone: "http://localhost:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring.cloud.gateway.routes:
  - id: config-server
    uri: http://${app.config-server}:8888
    predicates:
      - Path=/config/**
    filters:
      - RewritePath=/config/(?<segment>.*), /$\{segment}
  - id: product-composite
    uri: lb://product-composite
    predicates:
      - Path=/product-composite/**

  - id: auth-server
    uri: lb://auth-server
    predicates:
      - Path=/oauth2/**

  - id: product
    uri: lb://product
    predicates:
      - Path=/product/**
  - id: feature
    uri: lb://feature
    predicates:
      - Path=/feature/**
  - id: recommendation
    uri: lb://recommendation
    predicates:
      - Path=/recommendation/**
  - id: review
    uri: lb://review
    predicates:
      - Path=/review/**


  - id: product-composite-swagger-ui
    uri: lb://product-composite
    predicates:
      - Path=/openapi/**

  - id: product-composite-swagger-ui-webjars
    uri: lb://product-composite
    predicates:
      - Path=/webjars/**

  - id: eureka-api
    uri: http://${app.eureka-server}:8761
    predicates:
      - Path=/eureka/api/{segment}
    filters:
      - SetPath=/eureka/{segment}

  - id: eureka-web-start
    uri: http://${app.eureka-server}:8761
    predicates:
      - Path=/eureka/web
    filters:
      - SetPath=/

  - id: eureka-web-other
    uri: http://${app.eureka-server}:8761
    predicates:
      - Path=/eureka/**

  - id: host_route_200
    uri: http://httpstat.us
    predicates:
      - Host=i.feel.lucky:8080
      - Path=/headerrouting/**
    filters:
      - SetPath=/200

  - id: host_route_418
    uri: http://httpstat.us
    predicates:
      - Host=im.a.teapot:8080
      - Path=/headerrouting/**
    filters:
      - SetPath=/418

  - id: host_route_501
    uri: http://httpstat.us
    predicates:
      - Path=/headerrouting/**
    filters:
      - SetPath=/501
management.endpoint.gateway.enabled: true
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"
spring.cloud:
    compatibility-verifier:
      enabled: false
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    org.springframework.cloud.gateway: TRACE

app.auth-server: localhost
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:9999
spring:
  security:
    oauth2:
      client:
        registration:
          oidc-client:
            client-id: chau
            client-secret: 123
            scope: openid, profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
        provider:
          oidc-provider:
            authorization-uri: "http://${app.auth.host}:9999/oauth2/authorize"
            token-uri: "http://${app.auth.host}:9999/oauth2/token"
            user-info-uri: "http://${app.auth.host}:9999/userinfo"
            jwk-set-uri: "http://${app.auth.host}:9999/.well-known/jwks.json"
            issuer-uri: "http://${app.auth.host}:9999"

resilience4j.circuitbreaker:
  instances:
    product:
      allowHealthIndicatorToFail: false
      registerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      ignoreExceptions:
        - se.chau.microservices.api.exception.InvalidInputException
        - se.chau.microservices.api.exception.NotFoundException
management.zipkin.tracing.endpoint: http://zipkin-server:9411/api/v2/spans
management.tracing.sampling.probability: 1.0

---
spring.config.activate.on-profile: docker
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://auth-server:9999

app:
  auth:
    host: auth-server
  config-server: config-server
eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/
