server.port: 8888
spring.application.name: config
spring:
  profiles:
    active: native
  security:
    user:
      name: user
      password: 123
      roles: USER
  cloud:
    compatibility-verifier:
      enabled: false
    config:
      server.native.searchLocations: file:C:/Users/LENOVO/Desktop/core/config-repo/
#C:\Users\LENOVO\Desktop\core\config-repo
eureka-server: localhost
eureka:
  client:
    serviceUrl:
      defaultZone: "http://${eureka-server}:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

resilience4j.circuitbreaker:
  instances:
    product:
      allowHealthIndicatorToFail: false
      registerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      ignoreExceptions:
        - se.chau.microservices.api.exception.InvalidInputException
        - se.chau.microservices.api.exception.NotFoundException
management.zipkin.tracing.endpoint: http://zipkin-server:9411/api/v2/spans
management.tracing.sampling.probability: 1.0

# WARNING: Exposing all management endpoints over http should only be used during development, must be locked down in production!
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

logging:
  level:
    root: INFO
    org.springframework.boot.context.config: DEBUG
    org.springframework.cloud.config.server: DEBUG

---
spring.config.activate.on-profile: docker
#Minimize the risk when ks8 update
server.shutdown: graceful
spring.lifecycle.timeout-per-shutdown-phase: 10s
eureka:
  client:
    serviceUrl:
      defaultZone: "http://eureka:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
spring.cloud.config.server.native.searchLocations: file:/config-repo

