server:
  port: 9999
eureka:
  client:
    serviceUrl:
      defaultZone: "http://localhost:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
spring.application.name: auth-server
#spring:
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: http://localhost:9999
app:
  auth:
    host: localhost
spring.main.allow-bean-definition-overriding: true
spring:
  cloud:
    compatibility-verifier:
      enabled: false
  datasource:
    url: jdbc:mysql://localhost:3306/review
    username: chau
    password: 123
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update  # or `create-drop` for fresh schema creation during development
    show-sql: true       # Show SQL queries in the console (optional)
    database-platform: org.hibernate.dialect.MySQL8Dialect
#/oauth2/user-info

#spring:
#  application:
#    name: authorization-server
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: http://localhost:9999
#          jwk-set-uri: http://localhost:9999/.well-known/jwks.json
host: localhost

resilience4j.circuitbreaker:
  instances:
    product:
      allowHealthIndicatorToFail: false
      registerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      ignoreExceptions:
        - se.chau.microservices.api.exception.InvalidInputException
        - se.chau.microservices.api.exception.NotFoundException
management.zipkin.tracing.endpoint: http://zipkin-server:9411/api/v2/spans
management.tracing.sampling.probability: 1.0

---
spring.config.activate.on-profile: docker
port : 80
app:
  auth:
    host: auth-server
eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/
server.port: 9999
spring:
  datasource:
    url: jdbc:mysql://mysql:3306/review
    username: chau
    password: 123
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update  # or `create-drop` for fresh schema creation during development
    show-sql: true       # Show SQL queries in the console (optional)
    database-platform: org.hibernate.dialect.MySQL8Dialect
spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka
---
spring.config.activate.on-profile: prod

logging.level.root: WARN