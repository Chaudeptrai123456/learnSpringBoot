plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'se.chau.microservices.core.product_composite'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

ext {
    mapstructVersion = "1.5.5.Final"
    springCloudVersion = "2022.0.1"
}
repositories {
    mavenCentral()
}
jar {
    enabled = false
}
ext {
    resilience4jVersion = "2.0.2"
    springCloudVersion = "2022.0.1"
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "io.github.resilience4j:resilience4j-bom:${resilience4jVersion}"
    }
}
dependencies {
    implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}"
        implementation project(":api")
        implementation project(":util")
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-webflux' // Use webflux for reactive programming
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

        // Spring Cloud dependencies
        implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit:4.1.3'
        implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka:4.1.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.1.3'
    implementation 'org.springframework.cloud:spring-cloud-commons:4.1.2'

        // Nimbus for JWT handling

        implementation 'org.springframework.security:spring-security-oauth2-resource-server'
        implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Add this if you are using Spring Security 6.1.x or later
        implementation 'org.springframework.security:spring-security-config'
    implementation 'org.testng:testng:7.1.0'
    implementation project(path: ':Microservices:product')
    // Test dependencies
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
        testImplementation 'org.testcontainers:testcontainers'
}

