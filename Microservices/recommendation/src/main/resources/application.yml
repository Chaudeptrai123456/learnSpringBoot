
server.port: 8082
server.error.include-message: always
spring:
  data:
    mongodb:
      uri: mongodb://chau:123@localhost:27017/recommendation-db?authSource=admin&authMechanism=SCRAM-SHA-256
spring.cloud.function.definition: messageProcessor
spring.cloud:
  compatibility-verifier:
    enabled: false
spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.messageProcessor-in-0:
    destination: recommendations
    group: recommendationsGroup

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.messageProcessor-in-0.consumer:
  autoBindDlq: true
  republishToDlq: true

spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer:
  enableDlq: true

spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest

logging:
  level:
    root: INFO
    se.magnus: DEBUG
    org.springframework.data.mongodb.core.ReactiveMongoTemplate: DEBUG

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"
spring.application.name: recommendation

app.eureka-server: localhost
eureka:
  client:
    serviceUrl:
      defaultZone: "http://localhost:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:9999

---
spring.config.activate.on-profile: docker
#spring.security.oauth2.resourceserver.jwt.issuer-uri: http://auth-server:9999

server.port: 8080
spring:
  data:
    mongodb:
      host: mongodb
      uri: mongodb://chau:123@mongodb:27017/product-db?authSource=admin&authMechanism=SCRAM-SHA-256


spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka
eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/

---
spring.config.activate.on-profile: streaming_partitioned

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  partitioned: true
  instanceCount: 2

---
spring.config.activate.on-profile: streaming_instance_0

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0

---
spring.config.activate.on-profile: streaming_instance_1

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1