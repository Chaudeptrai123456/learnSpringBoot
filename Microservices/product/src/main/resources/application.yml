server.port: 8081
spring.application.name: product
app.eureka-server: localhost
server.error.include-message: always

spring:
  security:
    user:
      name: chau
      password: 123
  cloud:
    compatibility-verifier:
      enabled: false
  data:
    mongodb:
      uri: mongodb://chau:123@localhost:27017/product-db?authSource=admin&authMechanism=SCRAM-SHA-256
springdoc:
  swagger-ui:
    path: /openapi/swagger-ui.html
  api-docs:
    path: /openapi/v3/api-docs
  packagesToScan: se.chau.microservices.core.product_composite
  pathsToMatch: /**
spring.cloud.function.definition: messageProcessor

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.messageProcessor-in-0:
    destination: products
    group: productsGroup
spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092
spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest
api:
  common:
    apiVersion: 0.0.1
    appTitle: test for feature
    appDescription: | # Normal response
      If the requested product id is found the method will return information regarding:
      1. Base product information
      1. Reviews
      1. Recommendations
      1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)
      
      # Expected partial and error responses
      In the following cases, only a partial response be created (used to simplify testing of error conditions)
      
      ## Product id 113
      200 - Ok, but no recommendations will be returned
      
      ## Product id 213
      200 - Ok, but no reviews will be returned
      
      ## Non numerical product id
      400 - A **Bad Request** error will be returned
      
      ## Product id 13
      404 - A **Not Found** error will be returned
      
      ## Negative product ids
      422 - An **Unprocessable Entity** error will be returned
    apiContactName: phamchau
    appContactUrl:  test phase
    appContactEmail: phamchaugiatu@gmail.com
    apiTermOfService: 12312
    appLicense: 12312
    apiLicenseUrl: 23123
    apiExternalDoc: 123123
    apiExternalUrl: 123122
app:
  eureka-username: chau
  eureka-password: 123
  eureka-server: localhost
  auth-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://localhost:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
app.auth-server: localhost
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:9999

---

eureka:
  client:
    serviceUrl:
      defaultZone: "http://localhost:8761/eureka/"
app.auth-server: auth-server
spring.config.activate.on-profile: docker
server.port: 8080
spring:
  data:
    mongodb:
      host: mongodb
      uri: mongodb://chau:123@mongodb:27017/product-db?authSource=admin&authMechanism=SCRAM-SHA-256

spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka

eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/
---
spring.config.activate.on-profile: streaming_partitioned

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  partitioned: true
  instanceCount: 2

---
spring.config.activate.on-profile: streaming_instance_0

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0

---
spring.config.activate.on-profile: streaming_instance_1

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1